[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Marco-PC\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Marco-PC\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 12.0.2)
[debug]       Load.loadUnit: plugins took 207.8993ms
[debug]       Load.loadUnit: defsScala took 0.4171ms
[debug] [Loading] Scanning directory C:\Users\Marco-PC\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Marco-PC\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 27.209 ms
[debug]           Load.resolveProject(global-plugins) took 97.0424ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Marco-PC\.sbt\1.0\plugins, plugins: List(<none>))) took 168.7336ms
[debug] [Loading] Done in C:\Users\Marco-PC\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 206.1766ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.5083ms
[debug]     Load.loadUnit(file:/C:/Users/Marco-PC/.sbt/1.0/plugins/, ...) took 430.0687ms
[debug]   Load.apply: load took 729.8131ms
[debug]   Load.apply: resolveProjects took 10.3339ms
[debug]   Load.apply: finalTransforms took 115.4405ms
[debug]   Load.apply: config.delegates took 10.3631ms
[debug]   Load.apply: Def.make(settings)... took 4769.3243ms
[debug]   Load.apply: structureIndex took 209.8583ms
[debug]   Load.apply: mkStreams took 3.0869ms
[info] loading global plugins from C:\Users\Marco-PC\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 8844.9741ms
[debug]           Load.loadUnit: plugins took 41.8598ms
[debug]           Load.loadUnit: defsScala took 0.0051ms
[debug] [Loading] Scanning directory D:\Progetti\Scala\EserciziEsameStatistica\project
[debug]             Load.loadUnit: mkEval took 10.2668ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Progetti\Scala\EserciziEsameStatistica\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8714 ms
[info] loading settings for project eserciziesamestatistica-build from idea.sbt ...
[debug]               Load.resolveProject(eserciziesamestatistica-build) took 4.4646ms
[debug]             Load.loadTransitive: finalizeProject(Project(id eserciziesamestatistica-build, base: D:\Progetti\Scala\EserciziEsameStatistica\project, plugins: List(<none>))) took 8.2065ms
[debug] [Loading] Done in D:\Progetti\Scala\EserciziEsameStatistica\project, returning: (eserciziesamestatistica-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 3104.6281ms
[debug]           Load.loadUnit: cleanEvalClasses took 6.9809ms
[debug]         Load.loadUnit(file:/D:/Progetti/Scala/EserciziEsameStatistica/project/, ...) took 3154.7402ms
[debug]       Load.apply: load took 3158.366ms
[debug]       Load.apply: resolveProjects took 0.1672ms
[debug]       Load.apply: finalTransforms took 22.2505ms
[debug]       Load.apply: config.delegates took 0.7996ms
[debug]       Load.apply: Def.make(settings)... took 156.0937ms
[debug]       Load.apply: structureIndex took 36.2185ms
[debug]       Load.apply: mkStreams took 0.0032ms
[info] loading project definition from D:\Progetti\Scala\EserciziEsameStatistica\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 5167.7701ms
[debug]     Load.loadUnit: defsScala took 0.0035ms
[debug] [Loading] Scanning directory D:\Progetti\Scala\EserciziEsameStatistica
[debug]       Load.loadUnit: mkEval took 0.3895ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in D:\Progetti\Scala\EserciziEsameStatistica, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 3.0101 ms
[info] loading settings for project eserciziesamestatistica from build.sbt ...
[debug]         Load.resolveProject(eserciziesamestatistica) took 35.3339ms
[debug]       Load.loadTransitive: finalizeProject(Project(id eserciziesamestatistica, base: D:\Progetti\Scala\EserciziEsameStatistica, plugins: List(<none>))) took 40.0408ms
[debug] [Loading] Done in D:\Progetti\Scala\EserciziEsameStatistica, returning: (eserciziesamestatistica)
[debug]     Load.loadUnit: loadedProjectsRaw took 1188.3638ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.7432ms
[debug]   Load.loadUnit(file:/D:/Progetti/Scala/EserciziEsameStatistica/, ...) took 6368.8763ms
[debug] Load.apply: load took 6370.5685ms
[debug] Load.apply: resolveProjects took 0.1512ms
[debug] Load.apply: finalTransforms took 66.4375ms
[debug] Load.apply: config.delegates took 0.5525ms
[debug] Load.apply: Def.make(settings)... took 114.5278ms
[debug] Load.apply: structureIndex took 34.6062ms
[debug] Load.apply: mkStreams took 0.0029ms
[info] set current project to EserciziEsameStatistica (in build file:/D:/Progetti/Scala/EserciziEsameStatistica/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 49796 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 49796, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to EserciziEsameStatistica (in build file:/D:/Progetti/Scala/EserciziEsameStatistica/)
[debug] > Exec(idea-shell, None, None)
